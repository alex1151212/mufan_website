[{"E:\\FASTAPI_\\mufan_\\frontend\\src\\index.js":"1","E:\\FASTAPI_\\mufan_\\frontend\\src\\App.js":"2","E:\\FASTAPI_\\mufan_\\frontend\\src\\context\\AuthProvider.js":"3","E:\\FASTAPI_\\mufan_\\frontend\\src\\components\\Login.js":"4","E:\\FASTAPI_\\mufan_\\frontend\\src\\components\\Home.js":"5","E:\\FASTAPI_\\mufan_\\frontend\\src\\components\\Missing.js":"6","E:\\FASTAPI_\\mufan_\\frontend\\src\\components\\Layout.js":"7","E:\\FASTAPI_\\mufan_\\frontend\\src\\components\\Register.js":"8","E:\\FASTAPI_\\mufan_\\frontend\\src\\components\\PersistantLogin.js":"9","E:\\FASTAPI_\\mufan_\\frontend\\src\\components\\Admin.js":"10","E:\\FASTAPI_\\mufan_\\frontend\\src\\components\\Unauthorized.js":"11","E:\\FASTAPI_\\mufan_\\frontend\\src\\components\\RequireAuth.js":"12","E:\\FASTAPI_\\mufan_\\frontend\\src\\components\\LinkPage.js":"13","E:\\FASTAPI_\\mufan_\\frontend\\src\\components\\Users.js":"14","E:\\FASTAPI_\\mufan_\\frontend\\src\\hooks\\useAuth.js":"15","E:\\FASTAPI_\\mufan_\\frontend\\src\\hooks\\useLogout.js":"16","E:\\FASTAPI_\\mufan_\\frontend\\src\\hooks\\useInput.js":"17","E:\\FASTAPI_\\mufan_\\frontend\\src\\hooks\\useToggle.js":"18","E:\\FASTAPI_\\mufan_\\frontend\\src\\hooks\\useRefreshToken.js":"19","E:\\FASTAPI_\\mufan_\\frontend\\src\\hooks\\useLocalStorage.js":"20","E:\\FASTAPI_\\mufan_\\frontend\\src\\api\\axios.js":"21","E:\\FASTAPI_\\mufan_\\frontend\\src\\hooks\\useAxiosPrivate.js":"22"},{"size":746,"mtime":1652243410965,"results":"23","hashOfConfig":"24"},{"size":1944,"mtime":1652683252829,"results":"25","hashOfConfig":"24"},{"size":457,"mtime":1648893758469,"results":"26","hashOfConfig":"24"},{"size":4018,"mtime":1648893758467,"results":"27","hashOfConfig":"24"},{"size":1013,"mtime":1648893758467,"results":"28","hashOfConfig":"24"},{"size":363,"mtime":1648893758468,"results":"29","hashOfConfig":"24"},{"size":194,"mtime":1648893758467,"results":"30","hashOfConfig":"24"},{"size":7904,"mtime":1648893758468,"results":"31","hashOfConfig":"24"},{"size":1361,"mtime":1652746593707,"results":"32","hashOfConfig":"24"},{"size":377,"mtime":1648893758467,"results":"33","hashOfConfig":"24"},{"size":493,"mtime":1648893758468,"results":"34","hashOfConfig":"24"},{"size":564,"mtime":1648893758468,"results":"35","hashOfConfig":"24"},{"size":525,"mtime":1648893758467,"results":"36","hashOfConfig":"24"},{"size":1442,"mtime":1648893758469,"results":"37","hashOfConfig":"24"},{"size":181,"mtime":1648893758469,"results":"38","hashOfConfig":"24"},{"size":434,"mtime":1648893758470,"results":"39","hashOfConfig":"24"},{"size":372,"mtime":1648893758469,"results":"40","hashOfConfig":"24"},{"size":352,"mtime":1648893758470,"results":"41","hashOfConfig":"24"},{"size":674,"mtime":1648893758470,"results":"42","hashOfConfig":"24"},{"size":769,"mtime":1648893758470,"results":"43","hashOfConfig":"24"},{"size":279,"mtime":1652252916304,"results":"44","hashOfConfig":"24"},{"size":1535,"mtime":1648893758469,"results":"45","hashOfConfig":"24"},{"filePath":"46","messages":"47","suppressedMessages":"48","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"y617ea",{"filePath":"49","messages":"50","suppressedMessages":"51","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"52","messages":"53","suppressedMessages":"54","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55"},{"filePath":"56","messages":"57","suppressedMessages":"58","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59"},{"filePath":"60","messages":"61","suppressedMessages":"62","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"63","messages":"64","suppressedMessages":"65","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"66","messages":"67","suppressedMessages":"68","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"69","messages":"70","suppressedMessages":"71","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"72"},{"filePath":"73","messages":"74","suppressedMessages":"75","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"76","messages":"77","suppressedMessages":"78","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"79","messages":"80","suppressedMessages":"81","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"82","messages":"83","suppressedMessages":"84","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"85","messages":"86","suppressedMessages":"87","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"88","messages":"89","suppressedMessages":"90","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"91"},{"filePath":"92","messages":"93","suppressedMessages":"94","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"95","messages":"96","suppressedMessages":"97","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"98"},{"filePath":"99","messages":"100","suppressedMessages":"101","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"102","messages":"103","suppressedMessages":"104","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"105","messages":"106","suppressedMessages":"107","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"108","messages":"109","suppressedMessages":"110","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"111","messages":"112","suppressedMessages":"113","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"114","messages":"115","suppressedMessages":"116","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"E:\\FASTAPI_\\mufan_\\frontend\\src\\index.js",[],[],"E:\\FASTAPI_\\mufan_\\frontend\\src\\App.js",[],[],"E:\\FASTAPI_\\mufan_\\frontend\\src\\context\\AuthProvider.js",["117","118"],[],"import { createContext, useState } from \"react\";\r\n\r\nconst AuthContext = createContext({});\r\n\r\nexport const AuthProvider = ({ children }) => {\r\n    const [auth, setAuth] = useState({});\r\n    const [persist,setPersist] =useState(JSON.parse(localStorage.getItem(\"persist\") || false));\r\n    \r\n    return (\r\n        <AuthContext.Provider value={{ auth, setAuth }}>\r\n            {children}\r\n        </AuthContext.Provider>\r\n    )\r\n}\r\n\r\nexport default AuthContext;","E:\\FASTAPI_\\mufan_\\frontend\\src\\components\\Login.js",["119","120"],[],"import { useRef, useState, useEffect } from 'react';\r\nimport useAuth from '../hooks/useAuth';\r\nimport { Link, useNavigate, useLocation } from 'react-router-dom';\r\n// import useLocalStorage from '../hooks/useLocalStorage';\r\nimport axios from '../api/axios';\r\nimport useInput from '../hooks/useInput'\r\nimport useToggle from '../hooks/useToggle';\r\n\r\nconst LOGIN_URL = '/login';\r\n\r\nconst Login = () => {\r\n    const { setAuth ,persist,setPersist } = useAuth();\r\n\r\n    const navigate = useNavigate();\r\n    const location = useLocation();\r\n    const from = location.state?.from?.pathname || \"/\";\r\n\r\n    const userRef = useRef();\r\n    const errRef = useRef();\r\n\r\n    const [user, resetUser,userAttribs] = useInput('user',\"\");//useState('');\r\n    const [pwd, setPwd] = useState('');\r\n    const [errMsg, setErrMsg] = useState('');\r\n    const [check,toggleCheck]=useToggle('persist',false);\r\n\r\n    useEffect(() => {\r\n        userRef.current.focus();\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        setErrMsg('');\r\n    }, [user, pwd])\r\n\r\n    const handleSubmit = async (e) => {\r\n        e.preventDefault();\r\n\r\n        try {\r\n            const response = await axios.post(LOGIN_URL,\r\n                JSON.stringify(`grant_type=&username=${user}&password=${pwd}&scope=&client_id=&client_secret=`),\r\n                {\r\n                    header: { 'Content-Type': 'application/x-www-form-urlencoded' },\r\n                    withCredentials: true\r\n                }\r\n            );\r\n            console.log(JSON.stringify(response?.data));\r\n            //console.log(JSON.stringify(response));\r\n            const accessToken = response?.data?.accessToken;\r\n            const roles = response?.data?.roles;\r\n            setAuth({ user, pwd, roles, accessToken });\r\n            // setUser('');\r\n            resetUser();\r\n            setPwd('');\r\n            navigate(from, { replace: true });\r\n        } catch (err) {\r\n            if (!err?.response) {\r\n                setErrMsg('No Server Response');\r\n            } else if (err.response?.status === 400) {\r\n                setErrMsg('Missing Username or Password');\r\n            } else if (err.response?.status === 401) {\r\n                setErrMsg('Unauthorized');\r\n            } else {\r\n                setErrMsg('Login Failed');\r\n            }\r\n            errRef.current.focus();\r\n        }\r\n    \r\n    }\r\n\r\n// const togglePersist = () =>{\r\n//     setPersist(prev=> !prev);\r\n// }\r\n// useEffect(()=>{\r\n//     localStorage.setItem(\"persist\",persist)\r\n// },[persist])\r\n\r\n    return (\r\n\r\n        <section>\r\n            <p ref={errRef} className={errMsg ? \"errmsg\" : \"offscreen\"} aria-live=\"assertive\">{errMsg}</p>\r\n            <h1>Sign In</h1>\r\n            <form onSubmit={handleSubmit}>\r\n                <label htmlFor=\"username\">Username:</label>\r\n                <input\r\n                    type=\"text\"\r\n                    id=\"username\"\r\n                    ref={userRef}\r\n                    autoComplete=\"off\"\r\n                    {...userAttribs}\r\n                    required\r\n                />\r\n\r\n                <label htmlFor=\"password\">Password:</label>\r\n                <input\r\n                    type=\"password\"\r\n                    id=\"password\"\r\n                    onChange={(e) => setPwd(e.target.value)}\r\n                    value={pwd}\r\n                    required\r\n                />\r\n                <button>Sign In</button>\r\n                <div className='persistCheck'>\r\n                    <input type=\"checkbox\"\r\n                            id = \"persist\"\r\n                            onChange={toggleCheck}\r\n                            checked={check}\r\n                    />\r\n                    <label htmlFor='persist'>Trust This Device</label>\r\n                </div>\r\n            </form>\r\n            <p>\r\n                Need an Account?<br />\r\n                <span className=\"line\">\r\n                    <Link to=\"/register\">Sign Up</Link>\r\n                </span>\r\n            </p>\r\n        </section>\r\n\r\n    )\r\n}\r\n\r\nexport default Login\r\n\r\n\r\n\r\n","E:\\FASTAPI_\\mufan_\\frontend\\src\\components\\Home.js",[],[],"E:\\FASTAPI_\\mufan_\\frontend\\src\\components\\Missing.js",[],[],"E:\\FASTAPI_\\mufan_\\frontend\\src\\components\\Layout.js",[],[],"E:\\FASTAPI_\\mufan_\\frontend\\src\\components\\Register.js",["121"],[],"import { useRef, useState, useEffect } from \"react\";\r\nimport { faCheck, faTimes, faInfoCircle } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport axios from '../api/axios';\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst USER_REGEX = /^[A-z][A-z0-9-_]{3,23}$/;\r\nconst PWD_REGEX = /^(?=.*[a-z])(?=.*[A-Z])(?=.*[0-9])(?=.*[!@#$%]).{8,24}$/;\r\nconst REGISTER_URL = '/register';\r\n\r\nconst Register = () => {\r\n    const userRef = useRef();\r\n    const errRef = useRef();\r\n\r\n    const [user, setUser] = useState('');\r\n    const [validName, setValidName] = useState(false);\r\n    const [userFocus, setUserFocus] = useState(false);\r\n\r\n    const [pwd, setPwd] = useState('');\r\n    const [validPwd, setValidPwd] = useState(false);\r\n    const [pwdFocus, setPwdFocus] = useState(false);\r\n\r\n    const [matchPwd, setMatchPwd] = useState('');\r\n    const [validMatch, setValidMatch] = useState(false);\r\n    const [matchFocus, setMatchFocus] = useState(false);\r\n\r\n    const [errMsg, setErrMsg] = useState('');\r\n    const [success, setSuccess] = useState(false);\r\n\r\n    useEffect(() => {\r\n        userRef.current.focus();\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        setValidName(USER_REGEX.test(user));\r\n    }, [user])\r\n\r\n    useEffect(() => {\r\n        setValidPwd(PWD_REGEX.test(pwd));\r\n        setValidMatch(pwd === matchPwd);\r\n    }, [pwd, matchPwd])\r\n\r\n    useEffect(() => {\r\n        setErrMsg('');\r\n    }, [user, pwd, matchPwd])\r\n\r\n    const handleSubmit = async (e) => {\r\n        e.preventDefault();\r\n        // if button enabled with JS hack\r\n        const v1 = USER_REGEX.test(user);\r\n        const v2 = PWD_REGEX.test(pwd);\r\n        if (!v1 || !v2) {\r\n            setErrMsg(\"Invalid Entry\");\r\n            return;\r\n        }\r\n        try {\r\n            const response = await axios.post(REGISTER_URL,\r\n                JSON.stringify({ user, pwd }),\r\n                {\r\n                    headers: { 'Content-Type': 'application/json' },\r\n                    withCredentials: true\r\n                }\r\n            );\r\n            // TODO: remove console.logs before deployment\r\n            console.log(JSON.stringify(response?.data));\r\n            //console.log(JSON.stringify(response))\r\n            setSuccess(true);\r\n            //clear state and controlled inputs\r\n            setUser('');\r\n            setPwd('');\r\n            setMatchPwd('');\r\n        } catch (err) {\r\n            if (!err?.response) {\r\n                setErrMsg('No Server Response');\r\n            } else if (err.response?.status === 409) {\r\n                setErrMsg('Username Taken');\r\n            } else {\r\n                setErrMsg('Registration Failed')\r\n            }\r\n            errRef.current.focus();\r\n        }\r\n    }\r\n\r\n    return (\r\n        <>\r\n            {success ? (\r\n                <section>\r\n                    <h1>Success!</h1>\r\n                    <p>\r\n                        <a href=\"#\">Sign In</a>\r\n                    </p>\r\n                </section>\r\n            ) : (\r\n                <section>\r\n                    <p ref={errRef} className={errMsg ? \"errmsg\" : \"offscreen\"} aria-live=\"assertive\">{errMsg}</p>\r\n                    <h1>Register</h1>\r\n                    <form onSubmit={handleSubmit}>\r\n                        <label htmlFor=\"username\">\r\n                            Username:\r\n                            <FontAwesomeIcon icon={faCheck} className={validName ? \"valid\" : \"hide\"} />\r\n                            <FontAwesomeIcon icon={faTimes} className={validName || !user ? \"hide\" : \"invalid\"} />\r\n                        </label>\r\n                        <input\r\n                            type=\"text\"\r\n                            id=\"username\"\r\n                            ref={userRef}\r\n                            autoComplete=\"off\"\r\n                            onChange={(e) => setUser(e.target.value)}\r\n                            value={user}\r\n                            required\r\n                            aria-invalid={validName ? \"false\" : \"true\"}\r\n                            aria-describedby=\"uidnote\"\r\n                            onFocus={() => setUserFocus(true)}\r\n                            onBlur={() => setUserFocus(false)}\r\n                        />\r\n                        <p id=\"uidnote\" className={userFocus && user && !validName ? \"instructions\" : \"offscreen\"}>\r\n                            <FontAwesomeIcon icon={faInfoCircle} />\r\n                            4 to 24 characters.<br />\r\n                            Must begin with a letter.<br />\r\n                            Letters, numbers, underscores, hyphens allowed.\r\n                        </p>\r\n\r\n\r\n                        <label htmlFor=\"password\">\r\n                            Password:\r\n                            <FontAwesomeIcon icon={faCheck} className={validPwd ? \"valid\" : \"hide\"} />\r\n                            <FontAwesomeIcon icon={faTimes} className={validPwd || !pwd ? \"hide\" : \"invalid\"} />\r\n                        </label>\r\n                        <input\r\n                            type=\"password\"\r\n                            id=\"password\"\r\n                            onChange={(e) => setPwd(e.target.value)}\r\n                            value={pwd}\r\n                            required\r\n                            aria-invalid={validPwd ? \"false\" : \"true\"}\r\n                            aria-describedby=\"pwdnote\"\r\n                            onFocus={() => setPwdFocus(true)}\r\n                            onBlur={() => setPwdFocus(false)}\r\n                        />\r\n                        <p id=\"pwdnote\" className={pwdFocus && !validPwd ? \"instructions\" : \"offscreen\"}>\r\n                            <FontAwesomeIcon icon={faInfoCircle} />\r\n                            8 to 24 characters.<br />\r\n                            Must include uppercase and lowercase letters, a number and a special character.<br />\r\n                            Allowed special characters: <span aria-label=\"exclamation mark\">!</span> <span aria-label=\"at symbol\">@</span> <span aria-label=\"hashtag\">#</span> <span aria-label=\"dollar sign\">$</span> <span aria-label=\"percent\">%</span>\r\n                        </p>\r\n\r\n\r\n                        <label htmlFor=\"confirm_pwd\">\r\n                            Confirm Password:\r\n                            <FontAwesomeIcon icon={faCheck} className={validMatch && matchPwd ? \"valid\" : \"hide\"} />\r\n                            <FontAwesomeIcon icon={faTimes} className={validMatch || !matchPwd ? \"hide\" : \"invalid\"} />\r\n                        </label>\r\n                        <input\r\n                            type=\"password\"\r\n                            id=\"confirm_pwd\"\r\n                            onChange={(e) => setMatchPwd(e.target.value)}\r\n                            value={matchPwd}\r\n                            required\r\n                            aria-invalid={validMatch ? \"false\" : \"true\"}\r\n                            aria-describedby=\"confirmnote\"\r\n                            onFocus={() => setMatchFocus(true)}\r\n                            onBlur={() => setMatchFocus(false)}\r\n                        />\r\n                        <p id=\"confirmnote\" className={matchFocus && !validMatch ? \"instructions\" : \"offscreen\"}>\r\n                            <FontAwesomeIcon icon={faInfoCircle} />\r\n                            Must match the first password input field.\r\n                        </p>\r\n\r\n                        <button disabled={!validName || !validPwd || !validMatch ? true : false}>Sign Up</button>\r\n                    </form>\r\n                    <p>\r\n                        Already registered?<br />\r\n                        <span className=\"line\">\r\n                            <Link to=\"/\">Sign In</Link>\r\n                        </span>\r\n                    </p>\r\n                </section>\r\n            )}\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Register","E:\\FASTAPI_\\mufan_\\frontend\\src\\components\\PersistantLogin.js",["122","123"],[],"E:\\FASTAPI_\\mufan_\\frontend\\src\\components\\Admin.js",[],[],"E:\\FASTAPI_\\mufan_\\frontend\\src\\components\\Unauthorized.js",[],[],"E:\\FASTAPI_\\mufan_\\frontend\\src\\components\\RequireAuth.js",[],[],"E:\\FASTAPI_\\mufan_\\frontend\\src\\components\\LinkPage.js",[],[],"E:\\FASTAPI_\\mufan_\\frontend\\src\\components\\Users.js",["124"],[],"import { useState, useEffect } from \"react\";\r\nimport useAxiosPrivate from \"../hooks/useAxiosPrivate\";\r\nimport { useNavigate, useLocation } from \"react-router-dom\";\r\n\r\nconst Users = () => {\r\n    const [users, setUsers] = useState();\r\n    const axiosPrivate = useAxiosPrivate();\r\n    const navigate = useNavigate();\r\n    const location = useLocation();\r\n\r\n    useEffect(() => {\r\n        let isMounted = true;\r\n        const controller = new AbortController();\r\n\r\n        const getUsers = async () => {\r\n            try {\r\n                const response = await axiosPrivate.get('/users', {\r\n                    signal: controller.signal\r\n                });\r\n                console.log(response.data);\r\n                isMounted && setUsers(response.data);\r\n            } catch (err) {\r\n                console.error(err);\r\n                navigate('/login', { state: { from: location }, replace: true });\r\n            }\r\n        }\r\n\r\n        getUsers();\r\n\r\n        return () => {\r\n            isMounted = false;\r\n            controller.abort();\r\n        }\r\n    }, [])\r\n\r\n    return (\r\n        <article>\r\n            <h2>Users List</h2>\r\n            {users?.length\r\n                ? (\r\n                    <ul>\r\n                        {users.map((user, i) => <li key={i}>{user?.username}</li>)}\r\n                    </ul>\r\n                ) : <p>No users to display</p>\r\n            }\r\n        </article>\r\n    );\r\n};\r\n\r\nexport default Users;","E:\\FASTAPI_\\mufan_\\frontend\\src\\hooks\\useAuth.js",[],[],"E:\\FASTAPI_\\mufan_\\frontend\\src\\hooks\\useLogout.js",["125"],[],"import axios from \"../api/axios\";\r\nimport useAuth from \"./useAuth\";\r\n\r\nconst useLogout = ()=>{\r\n    const {setAuth} = useAuth();\r\n\r\n    const logout = async ()=>{\r\n        setAuth({});\r\n        try{\r\n            const response = await axios('/logout' , {\r\n                withCredentials:true\r\n            });\r\n        }catch(err){\r\n            console.error(err);\r\n        }\r\n    }\r\n    return logout;\r\n}\r\n\r\nexport default useLogout;","E:\\FASTAPI_\\mufan_\\frontend\\src\\hooks\\useInput.js",[],[],"E:\\FASTAPI_\\mufan_\\frontend\\src\\hooks\\useToggle.js",[],[],"E:\\FASTAPI_\\mufan_\\frontend\\src\\hooks\\useRefreshToken.js",[],[],"E:\\FASTAPI_\\mufan_\\frontend\\src\\hooks\\useLocalStorage.js",[],[],"E:\\FASTAPI_\\mufan_\\frontend\\src\\api\\axios.js",[],[],"E:\\FASTAPI_\\mufan_\\frontend\\src\\hooks\\useAxiosPrivate.js",[],[],{"ruleId":"126","severity":1,"message":"127","line":7,"column":12,"nodeType":"128","messageId":"129","endLine":7,"endColumn":19},{"ruleId":"126","severity":1,"message":"130","line":7,"column":20,"nodeType":"128","messageId":"129","endLine":7,"endColumn":30},{"ruleId":"126","severity":1,"message":"127","line":12,"column":22,"nodeType":"128","messageId":"129","endLine":12,"endColumn":29},{"ruleId":"126","severity":1,"message":"130","line":12,"column":30,"nodeType":"128","messageId":"129","endLine":12,"endColumn":40},{"ruleId":"131","severity":1,"message":"132","line":90,"column":25,"nodeType":"133","endLine":90,"endColumn":37},{"ruleId":"134","severity":1,"message":"135","line":30,"column":8,"nodeType":"136","endLine":30,"endColumn":10,"suggestions":"137"},{"ruleId":"134","severity":1,"message":"138","line":35,"column":8,"nodeType":"136","endLine":35,"endColumn":19,"suggestions":"139"},{"ruleId":"134","severity":1,"message":"140","line":34,"column":8,"nodeType":"136","endLine":34,"endColumn":10,"suggestions":"141"},{"ruleId":"126","severity":1,"message":"142","line":10,"column":19,"nodeType":"128","messageId":"129","endLine":10,"endColumn":27},"no-unused-vars","'persist' is assigned a value but never used.","Identifier","unusedVar","'setPersist' is assigned a value but never used.","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/blob/HEAD/docs/rules/anchor-is-valid.md","JSXOpeningElement","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'auth?.accessToken' and 'refresh'. Either include them or remove the dependency array.","ArrayExpression",["143"],"React Hook useEffect has a missing dependency: 'auth?.accessToken'. Either include it or remove the dependency array.",["144"],"React Hook useEffect has missing dependencies: 'axiosPrivate', 'location', and 'navigate'. Either include them or remove the dependency array.",["145"],"'response' is assigned a value but never used.",{"desc":"146","fix":"147"},{"desc":"148","fix":"149"},{"desc":"150","fix":"151"},"Update the dependencies array to be: [auth?.accessToken, refresh]",{"range":"152","text":"153"},"Update the dependencies array to be: [auth?.accessToken, isLoading]",{"range":"154","text":"155"},"Update the dependencies array to be: [axiosPrivate, location, navigate]",{"range":"156","text":"157"},[945,947],"[auth?.accessToken, refresh]",[1096,1107],"[auth?.accessToken, isLoading]",[1064,1066],"[axiosPrivate, location, navigate]"]