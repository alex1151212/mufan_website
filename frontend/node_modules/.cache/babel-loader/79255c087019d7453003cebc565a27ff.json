{"ast":null,"code":"var _jsxFileName = \"D:\\\\FASTAPI_\\\\mufan_\\\\frontend\\\\src\\\\Register.js\",\n    _s = $RefreshSig$();\n\nimport { useRef, useState, useEffect } from 'react';\nimport { faCheck, faTimes, faInfoCircle } from '@fortawesome/free-solid-svg-icons';\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst USER_REGEX = /^[a-zA-Z][a-zA-Z0-9-_]{3,23}$/;\nconst PWD_REGEX = /^(?=.*[a-z])(?=.*[A-Z])(?=.*[0-9])(?=.*[!@#$%]).{8,24}$/;\n\nfunction Register() {\n  _s();\n\n  const userRef = useRef();\n  const errRef = useRef();\n  const [user, setUser] = useState('');\n  const [validName, setValidName] = useState(false);\n  const [userFocus, setUserFocus] = useState(false);\n  const [pwd, setPwd] = useState('');\n  const [validPwd, setValidPwd] = useState(false);\n  const [pwdFocus, setPwdFocus] = useState(false);\n  const [matchPwd, setMatchPwd] = useState('');\n  const [validMatch, setValidMatch] = useState(false);\n  const [matchFocus, setMatchFocus] = useState(false);\n  const [errMsg, setErrMsg] = useState('');\n  const [success, setSuccess] = useState(false);\n  useEffect(() => {\n    userRef.current.focus();\n  }, []);\n  useEffect(() => {\n    const result = USER_REGEX.test(user);\n    console.log(result);\n    console.log(user);\n    setValidName(result);\n  }, [user]);\n  useEffect(() => {\n    const result = PWD_REGEX.test(pwd);\n    console.log(result);\n    console.log(pwd);\n    setValidName(result);\n    const match = pwd === matchPwd;\n    setValidMatch(match);\n  }, [pwd, matchPwd]);\n  useEffect(() => {\n    setErrMsg('');\n  }, [user, pwd, matchPwd]);\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      ref: errRef,\n      className: errMsg ? \"errmsg\" : \"offscreen\",\n      \"aria-live\": \"assertive\",\n      children: errMsg\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"username\",\n        children: [\"Username:\", /*#__PURE__*/_jsxDEV(\"span\", {\n          className: validName ? \"valid\" : \"hide\",\n          children: /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n            icon: faCheck\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: validName || !user ? \"hide\" : \"invalid\",\n          children: /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n            icon: faTimes\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"username\",\n        ref: userRef,\n        autoComplete: \"off\",\n        onChange: e => setUser(e.target.value),\n        required: true,\n        \"aria-invalid\": validName ? \"false\" : \"true\",\n        \"aria-describedby\": \"uidnote\",\n        onFocus: () => setUserFocus(true),\n        onBlur: () => setUserFocus(false)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        id: \"uidnote\",\n        className: userFocus && user && !validName ? \"instructions\" : \"offscreen\",\n        children: [/*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n          icon: faInfoCircle\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 21\n        }, this), \"4 to 24 characters.\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 40\n        }, this), \"Must begin with a letter.\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 46\n        }, this), \"Letters, numbers, underscores, hyphens allowed.\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"password\",\n        children: [\"Username:\", /*#__PURE__*/_jsxDEV(\"span\", {\n          className: validPwd ? \"valid\" : \"hide\",\n          children: /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n            icon: faCheck\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: validPwd || !user ? \"hide\" : \"invalid\",\n          children: /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n            icon: faTimes\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        id: \"password\",\n        autoComplete: \"off\",\n        onChange: e => setPwd(e.target.value),\n        required: true,\n        \"aria-invalid\": validPwd ? \"false\" : \"true\",\n        \"aria-describedby\": \"pwdnote\",\n        onFocus: () => setUserFocus(true),\n        onBlur: () => setUserFocus(false)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        id: \"uidnote\",\n        className: userFocus && user && !validPwd ? \"instructions\" : \"offscreen\",\n        children: [/*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n          icon: faInfoCircle\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 21\n        }, this), \"4 to 24 characters.\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 40\n        }, this), \"Must begin with a letter.\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 46\n        }, this), \"Letters, numbers, underscores, hyphens allowed.\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Register, \"K2L7L9cVkNc42S3paB9KBpe33pw=\");\n\n_c = Register;\nexport default Register;\n\nvar _c;\n\n$RefreshReg$(_c, \"Register\");","map":{"version":3,"sources":["D:/FASTAPI_/mufan_/frontend/src/Register.js"],"names":["useRef","useState","useEffect","faCheck","faTimes","faInfoCircle","FontAwesomeIcon","USER_REGEX","PWD_REGEX","Register","userRef","errRef","user","setUser","validName","setValidName","userFocus","setUserFocus","pwd","setPwd","validPwd","setValidPwd","pwdFocus","setPwdFocus","matchPwd","setMatchPwd","validMatch","setValidMatch","matchFocus","setMatchFocus","errMsg","setErrMsg","success","setSuccess","current","focus","result","test","console","log","match","e","target","value"],"mappings":"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","sourcesContent":["import { useRef, useState, useEffect, } from 'react';\r\nimport { faCheck, faTimes, faInfoCircle } from '@fortawesome/free-solid-svg-icons';\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\n\r\nconst USER_REGEX = /^[a-zA-Z][a-zA-Z0-9-_]{3,23}$/;\r\nconst PWD_REGEX = /^(?=.*[a-z])(?=.*[A-Z])(?=.*[0-9])(?=.*[!@#$%]).{8,24}$/;\r\n\r\nfunction Register() {\r\n    const userRef = useRef();\r\n    const errRef = useRef();\r\n\r\n    const [user, setUser] = useState('');\r\n    const [validName, setValidName] = useState(false);\r\n    const [userFocus, setUserFocus] = useState(false);\r\n\r\n    const [pwd, setPwd] = useState('');\r\n    const [validPwd, setValidPwd] = useState(false);\r\n    const [pwdFocus, setPwdFocus] = useState(false);\r\n\r\n    const [matchPwd, setMatchPwd] = useState('');\r\n    const [validMatch, setValidMatch] = useState(false);\r\n    const [matchFocus, setMatchFocus] = useState(false);\r\n\r\n    const [errMsg, setErrMsg] = useState('');\r\n    const [success, setSuccess] = useState(false);\r\n\r\n    useEffect(() => {\r\n        userRef.current.focus();\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        const result = USER_REGEX.test(user);\r\n        console.log(result);\r\n        console.log(user);\r\n        setValidName(result);\r\n    }, [user])\r\n\r\n    useEffect(() => {\r\n        const result = PWD_REGEX.test(pwd);\r\n        console.log(result);\r\n        console.log(pwd);\r\n        setValidName(result);\r\n        const match = pwd === matchPwd;\r\n        setValidMatch(match);\r\n    }, [pwd, matchPwd])\r\n\r\n    useEffect(()=>{\r\n      setErrMsg('');\r\n    },[user,pwd,matchPwd])\r\n\r\n    return (\r\n        <section>\r\n            <p ref={errRef} className={errMsg ? \"errmsg\" :\r\n                \"offscreen\"} aria-live=\"assertive\">{errMsg}</p>\r\n            <form>\r\n                <label htmlFor=\"username\">\r\n                    Username:\r\n                    <span className={validName ? \"valid\" : \"hide\"}>\r\n                        <FontAwesomeIcon icon={faCheck} />\r\n                    </span>\r\n                    <span className={validName || !user ? \"hide\" :\r\n                        \"invalid\"}>\r\n                        <FontAwesomeIcon icon={faTimes} />\r\n                    </span>\r\n                </label>\r\n                <input\r\n                    type=\"text\"\r\n                    id=\"username\"\r\n                    ref={userRef}\r\n                    autoComplete=\"off\"\r\n                    onChange={(e) => setUser(e.target.value)}\r\n                    required\r\n                    aria-invalid={validName ? \"false\" : \"true\"}\r\n                    aria-describedby=\"uidnote\"\r\n                    onFocus={() => setUserFocus(true)}\r\n                    onBlur={() => setUserFocus(false)}\r\n                />\r\n                <p id=\"uidnote\" className={userFocus && user &&\r\n                    !validName ? \"instructions\" : \"offscreen\"}>\r\n                    <FontAwesomeIcon icon={faInfoCircle} />\r\n                    4 to 24 characters.<br />\r\n                    Must begin with a letter.<br />\r\n                    Letters, numbers, underscores, hyphens allowed.\r\n                </p>\r\n\r\n                <label htmlFor=\"password\">\r\n                    Username:\r\n                    <span className={validPwd ? \"valid\" : \"hide\"}>\r\n                        <FontAwesomeIcon icon={faCheck} />\r\n                    </span>\r\n                    <span className={validPwd || !user ? \"hide\" :\r\n                        \"invalid\"}>\r\n                        <FontAwesomeIcon icon={faTimes} />\r\n                    </span>\r\n                </label>\r\n                <input\r\n                    type=\"password\"\r\n                    id=\"password\"\r\n                    autoComplete=\"off\"\r\n                    onChange={(e) => setPwd(e.target.value)}\r\n                    required\r\n                    aria-invalid={validPwd ? \"false\" : \"true\"}\r\n                    aria-describedby=\"pwdnote\"\r\n                    onFocus={() => setUserFocus(true)}\r\n                    onBlur={() => setUserFocus(false)}\r\n                />\r\n                <p id=\"uidnote\" className={userFocus && user &&\r\n                    !validPwd ? \"instructions\" : \"offscreen\"}>\r\n                    <FontAwesomeIcon icon={faInfoCircle} />\r\n                    4 to 24 characters.<br />\r\n                    Must begin with a letter.<br />\r\n                    Letters, numbers, underscores, hyphens allowed.\r\n                </p>\r\n            </form>\r\n        </section>\r\n    )\r\n}\r\n\r\nexport default Register;\r\n\r\n"]},"metadata":{},"sourceType":"module"}