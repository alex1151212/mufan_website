{"ast":null,"code":"var _jsxFileName = \"D:\\\\FASTAPI_\\\\mufan_\\\\frontend\\\\src\\\\components\\\\Users.js\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect } from \"react\";\nimport axios from \"../api/axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Users = () => {\n  _s();\n\n  const [users, setUsers] = useState();\n  useEffect(() => {\n    let isMounted = true;\n    const controller = new AbortController();\n\n    const getUsers = async () => {\n      try {\n        const response = await axios.get('/users', {\n          signal: controller.signal\n        });\n        console.log(response.data);\n        isMounted && setUsers(response.data);\n      } catch (err) {\n        console.log(err);\n      }\n    };\n\n    getUsers();\n    return () => {\n      isMounted = false;\n      controller.abort();\n    };\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"article\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Users List\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }, this), users !== null && users !== void 0 && users.length ? /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: users.map((user, i) => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: user === null || user === void 0 ? void 0 : user.username\n      }, i, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 46\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 21\n    }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No users to display\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 20\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Users, \"aieBUwUNVk79NnGx9UbQ37XqTac=\");\n\n_c = Users;\n\nvar _c;\n\n$RefreshReg$(_c, \"Users\");","map":{"version":3,"sources":["D:/FASTAPI_/mufan_/frontend/src/components/Users.js"],"names":["useState","useEffect","axios","Users","users","setUsers","isMounted","controller","AbortController","getUsers","response","get","signal","console","log","data","err","abort","length","map","user","i","username"],"mappings":";;;AAAA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AACA,OAAOC,KAAP,MAAkB,cAAlB;;;AAEA,MAAMC,KAAK,GAAI,MAAM;AAAA;;AACjB,QAAM,CAACC,KAAD,EAAOC,QAAP,IAAmBL,QAAQ,EAAjC;AAGAC,EAAAA,SAAS,CAAC,MAAI;AACV,QAAIK,SAAS,GAAG,IAAhB;AACA,UAAMC,UAAU,GAAG,IAAIC,eAAJ,EAAnB;;AAEA,UAAMC,QAAQ,GAAG,YAAW;AACxB,UAAG;AACC,cAAMC,QAAQ,GAAG,MAAMR,KAAK,CAACS,GAAN,CAAU,QAAV,EAAmB;AACtCC,UAAAA,MAAM,EAACL,UAAU,CAACK;AADoB,SAAnB,CAAvB;AAGAC,QAAAA,OAAO,CAACC,GAAR,CAAYJ,QAAQ,CAACK,IAArB;AACAT,QAAAA,SAAS,IAAID,QAAQ,CAACK,QAAQ,CAACK,IAAV,CAArB;AACH,OAND,CAMC,OAAMC,GAAN,EAAU;AACPH,QAAAA,OAAO,CAACC,GAAR,CAAYE,GAAZ;AACH;AACJ,KAVD;;AAWAP,IAAAA,QAAQ;AACR,WAAO,MAAM;AACTH,MAAAA,SAAS,GAAG,KAAZ;AACAC,MAAAA,UAAU,CAACU,KAAX;AACH,KAHD;AAKC,GArBI,EAqBH,EArBG,CAAT;AAuBA,sBACI;AAAA,4BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,EAGQb,KAAK,SAAL,IAAAA,KAAK,WAAL,IAAAA,KAAK,CAAEc,MAAP,gBAEI;AAAA,gBACKd,KAAK,CAACe,GAAN,CAAU,CAACC,IAAD,EAAMC,CAAN,kBAAU;AAAA,kBAChBD,IADgB,aAChBA,IADgB,uBAChBA,IAAI,CAAEE;AADU,SAASD,CAAT;AAAA;AAAA;AAAA;AAAA,cAApB;AADL;AAAA;AAAA;AAAA;AAAA,YAFJ,gBAOG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAVX;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAeH,CA1CD;;GAAMlB,K;;KAAAA,K","sourcesContent":["import { useState ,useEffect } from \"react\";\r\nimport axios from \"../api/axios\";\r\n\r\nconst Users =  () => {\r\n    const [users,setUsers] = useState();\r\n\r\n\r\n    useEffect(()=>{\r\n        let isMounted = true;\r\n        const controller = new AbortController();\r\n\r\n        const getUsers = async() => {\r\n            try{\r\n                const response = await axios.get('/users',{\r\n                    signal:controller.signal\r\n                });\r\n                console.log(response.data);\r\n                isMounted && setUsers(response.data);\r\n            }catch(err){\r\n                console.log(err);\r\n            }\r\n        }\r\n        getUsers();\r\n        return () => {\r\n            isMounted = false;\r\n            controller.abort();\r\n        }\r\n        \r\n        },[])\r\n\r\n    return(\r\n        <article>\r\n            <h2>Users List</h2>\r\n            {\r\n                users?.length\r\n                ? (\r\n                    <ul>\r\n                        {users.map((user,i)=><li key={i}>\r\n                            {user?.username}</li>\r\n                        )}\r\n                    </ul>\r\n                ): <p>No users to display</p>\r\n            }\r\n        </article>\r\n    );\r\n}"]},"metadata":{},"sourceType":"module"}