{"ast":null,"code":"var _jsxFileName = \"D:\\\\FASTAPI_\\\\mufan_\\\\frontend\\\\src\\\\components\\\\Register.js\",\n    _s = $RefreshSig$();\n\nimport { useRef, useState, useEffect, useContext } from 'react';\nimport { faCheck, faTimes, faInfoCircle, faSlash } from '@fortawesome/free-solid-svg-icons';\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport axios from '../api/axios';\nimport { AuthContext } from '../context/AuthContext';\nimport { Link } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst USER_REGEX = /^[a-zA-Z][a-zA-Z0-9-_]{3,23}$/;\nconst PWD_REGEX = /^(?=.*[a-z])(?=.*[A-Z])(?=.*[0-9])(?=.*[!@#$%]).{8,24}$/;\nconst REGISTER_URL = '/register';\n\nfunction Register() {\n  _s();\n\n  const userRef = useRef();\n  const errRef = useRef();\n  const [user, setUser] = useState('');\n  const [validName, setValidName] = useState(false);\n  const [userFocus, setUserFocus] = useState(false);\n  const [pwd, setPwd] = useState('');\n  const [validPwd, setValidPwd] = useState(false);\n  const [pwdFocus, setPwdFocus] = useState(false);\n  const [matchPwd, setMatchPwd] = useState('');\n  const [validMatch, setValidMatch] = useState(false);\n  const [matchFocus, setMatchFocus] = useState(false);\n  const [errMsg, setErrMsg] = useState('');\n  const [success, setSuccess] = useState(false);\n  const [, setToken] = useContext(AuthContext);\n  useEffect(() => {\n    console.log(userRef.current);\n    userRef.current.focus();\n  }, []);\n  useEffect(() => {\n    const result = USER_REGEX.test(user);\n    console.log(result);\n    console.log(user);\n    setValidName(result);\n  }, [user]);\n  useEffect(() => {\n    const result = PWD_REGEX.test(pwd);\n    console.log(result);\n    console.log(pwd);\n    setValidPwd(result);\n    const match = pwd === matchPwd;\n    setValidMatch(match);\n  }, [pwd, matchPwd]);\n  useEffect(() => {\n    setErrMsg('');\n  }, [user, pwd, matchPwd]);\n\n  const handleSubmit = async e => {\n    e.preventDefault();\n    const v1 = USER_REGEX.test(user);\n    const v2 = PWD_REGEX.test(pwd);\n\n    if (!v1 || !v2) {\n      setErrMsg(\"Invalid Entry\");\n      return;\n    }\n\n    try {\n      const response = await axios.post(REGISTER_URL, JSON.stringify({\n        username: user,\n        password: pwd\n      }), {\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        withCredentials: true\n      });\n      console.log(response.data);\n      console.log(response.accessToken);\n      console.log(JSON.stringify(response));\n      setSuccess(true);\n      setUser('');\n      setPwd('');\n      setMatchPwd('');\n    } catch (err) {\n      if (!(err !== null && err !== void 0 && err.response)) {\n        setErrMsg(\"No Server Response\");\n      } else if (err.response === 409) {\n        setErrMsg('Username Taken');\n      } else {\n        setErrMsg(\"Registration Failed\");\n      }\n\n      errRef.current.focus();\n    }\n\n    console.log(user, pwd);\n    setSuccess(true);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: success ? /*#__PURE__*/_jsxDEV(\"section\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Success!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 25\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: /*#__PURE__*/_jsxDEV(Link, {\n          to: \"/login\",\n          children: \"Sign Up\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 29\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 25\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 21\n    }, this) : /*#__PURE__*/_jsxDEV(\"section\", {\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        ref: errRef,\n        className: errMsg ? \"errmsg\" : \"offscreen\",\n        \"aria-live\": \"assertive\",\n        children: errMsg\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 25\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"username\",\n          children: [\"Username:\", /*#__PURE__*/_jsxDEV(\"span\", {\n            className: validName ? \"valid\" : \"hide\",\n            children: /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n              icon: faCheck\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 120,\n              columnNumber: 37\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 119,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: validName || !user ? \"hide\" : \"invalid\",\n            children: /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n              icon: faTimes\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 124,\n              columnNumber: 37\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 122,\n            columnNumber: 33\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: \"username\",\n          ref: userRef,\n          autoComplete: \"off\",\n          onChange: e => setUser(e.target.value),\n          required: true,\n          \"aria-invalid\": validName ? \"false\" : \"true\",\n          \"aria-describedby\": \"uidnote\",\n          onFocus: () => setUserFocus(true),\n          onBlur: () => setUserFocus(false)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          id: \"uidnote\",\n          className: userFocus && user && !validName ? \"instructions\" : \"offscreen\",\n          children: [/*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n            icon: faInfoCircle\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 141,\n            columnNumber: 33\n          }, this), \"4 to 24 characters.\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 142,\n            columnNumber: 52\n          }, this), \"Must begin with a letter.\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 143,\n            columnNumber: 58\n          }, this), \"Letters, numbers, underscores, hyphens allowed.\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 139,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"password\",\n          children: [\"Password:\", /*#__PURE__*/_jsxDEV(\"span\", {\n            className: validPwd ? \"valid\" : \"hide\",\n            children: /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n              icon: faCheck\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 150,\n              columnNumber: 37\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 149,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: validPwd || !pwd ? \"hide\" : \"invalid\",\n            children: /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n              icon: faTimes\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 154,\n              columnNumber: 37\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 152,\n            columnNumber: 33\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 147,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          id: \"password\",\n          onChange: e => setPwd(e.target.value),\n          required: true,\n          \"aria-invalid\": validPwd ? \"false\" : \"true\",\n          \"aria-describedby\": \"pwdnote\",\n          onFocus: () => setPwdFocus(true),\n          onBlur: () => setPwdFocus(false)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 157,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          id: \"pwdnote\",\n          className: pwdFocus && !validPwd ? \"instructions\" : \"offscreen\",\n          children: [/*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n            icon: faInfoCircle\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 169,\n            columnNumber: 33\n          }, this), \"8 to 24 characters.\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 170,\n            columnNumber: 52\n          }, this), \"Must begin with a letter.\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 171,\n            columnNumber: 58\n          }, this), \"Must include uppercase and lowercase letters, a number and a special character.\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 173,\n            columnNumber: 43\n          }, this), \"Allowed special characters:\", /*#__PURE__*/_jsxDEV(\"span\", {\n            \"aria-label\": \"exclamation mark\",\n            children: \"!\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 175,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            \"aria-label\": \"at symbol\",\n            children: \"@\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 176,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            \"aria-label\": \"hashtag\",\n            children: \"#\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 177,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            \"aria-label\": \"dollar sign\",\n            children: \"$\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 178,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            \"aria-label\": \"percent\",\n            children: \"%\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 179,\n            columnNumber: 33\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 167,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"confirm_pwd\",\n          children: [\"Confirm Password:\", /*#__PURE__*/_jsxDEV(\"span\", {\n            className: validMatch && matchPwd ? \"valid\" : \"hide\",\n            children: /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n              icon: faCheck\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 185,\n              columnNumber: 37\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 184,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: validMatch || !matchPwd ? \"hide\" : \"invalid\",\n            children: /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n              icon: faTimes\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 189,\n              columnNumber: 37\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 187,\n            columnNumber: 33\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 182,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          id: \"confirm_pwd\",\n          onChange: e => setMatchPwd(e.target.value),\n          required: true,\n          \"aria-invalid\": validMatch ? \"false\" : \"true\",\n          \"aria-describedby\": \"confirmnote\",\n          onFocus: () => setMatchFocus(true),\n          onBlur: () => setMatchFocus(false)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 192,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          id: \"confirmnote\",\n          className: matchFocus && !validMatch ? \"instructions\" : \"offscreen\",\n          children: [/*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n            icon: faInfoCircle\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 204,\n            columnNumber: 33\n          }, this), \"Must match the first password input field.\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 202,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          disabled: !validName || !validPwd || !validMatch ? true : false,\n          children: \"Sign Up\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 208,\n          columnNumber: 29\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 25\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Already registered?\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 212,\n          columnNumber: 48\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"line\",\n          children: /*#__PURE__*/_jsxDEV(Link, {\n            to: \"/\",\n            children: \"Sign In\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 214,\n            columnNumber: 33\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 213,\n          columnNumber: 29\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 211,\n        columnNumber: 25\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 21\n    }, this)\n  }, void 0, false);\n}\n\n_s(Register, \"lC0YqDGXLKVgwEQ8XhNDx/AReq8=\");\n\n_c = Register;\nexport default Register;\n\nvar _c;\n\n$RefreshReg$(_c, \"Register\");","map":{"version":3,"sources":["D:/FASTAPI_/mufan_/frontend/src/components/Register.js"],"names":["useRef","useState","useEffect","useContext","faCheck","faTimes","faInfoCircle","faSlash","FontAwesomeIcon","axios","AuthContext","Link","USER_REGEX","PWD_REGEX","REGISTER_URL","Register","userRef","errRef","user","setUser","validName","setValidName","userFocus","setUserFocus","pwd","setPwd","validPwd","setValidPwd","pwdFocus","setPwdFocus","matchPwd","setMatchPwd","validMatch","setValidMatch","matchFocus","setMatchFocus","errMsg","setErrMsg","success","setSuccess","setToken","console","log","current","focus","result","test","match","handleSubmit","e","preventDefault","v1","v2","response","post","JSON","stringify","username","password","headers","withCredentials","data","accessToken","err","target","value"],"mappings":"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","sourcesContent":["import { useRef, useState, useEffect,useContext } from 'react';\r\nimport { faCheck, faTimes, faInfoCircle, faSlash } from '@fortawesome/free-solid-svg-icons';\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport axios from '../api/axios';\r\nimport { AuthContext } from '../context/AuthContext';\r\n\r\nimport {Link} from 'react-router-dom'\r\n\r\n\r\nconst USER_REGEX = /^[a-zA-Z][a-zA-Z0-9-_]{3,23}$/;\r\nconst PWD_REGEX = /^(?=.*[a-z])(?=.*[A-Z])(?=.*[0-9])(?=.*[!@#$%]).{8,24}$/;\r\nconst REGISTER_URL = '/register'\r\nfunction Register() {\r\n    const userRef = useRef();\r\n    const errRef = useRef();\r\n\r\n    const [user, setUser] = useState('');\r\n    const [validName, setValidName] = useState(false);\r\n    const [userFocus, setUserFocus] = useState(false);\r\n\r\n    const [pwd, setPwd] = useState('');\r\n    const [validPwd, setValidPwd] = useState(false);\r\n    const [pwdFocus, setPwdFocus] = useState(false);\r\n\r\n    const [matchPwd, setMatchPwd] = useState('');\r\n    const [validMatch, setValidMatch] = useState(false);\r\n    const [matchFocus, setMatchFocus] = useState(false);\r\n\r\n    const [errMsg, setErrMsg] = useState('');\r\n    const [success, setSuccess] = useState(false);\r\n\r\n    const[,setToken] = useContext(AuthContext);\r\n\r\n    useEffect(() => {\r\n        console.log(userRef.current)\r\n        userRef.current.focus();\r\n        \r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        const result = USER_REGEX.test(user);\r\n        console.log(result);\r\n        console.log(user);\r\n        setValidName(result);\r\n    }, [user])\r\n\r\n    useEffect(() => {\r\n        const result = PWD_REGEX.test(pwd);\r\n        console.log(result);\r\n        console.log(pwd);\r\n        setValidPwd(result);\r\n        const match = pwd === matchPwd;\r\n        setValidMatch(match);\r\n    }, [pwd, matchPwd])\r\n\r\n    useEffect(() => {\r\n        setErrMsg('');\r\n    }, [user, pwd, matchPwd])\r\n\r\n    \r\n    \r\n    \r\n    const handleSubmit = async (e) => {\r\n        e.preventDefault();\r\n\r\n        const v1 = USER_REGEX.test(user);\r\n        const v2 = PWD_REGEX.test(pwd);\r\n        if (!v1 || !v2) {\r\n            setErrMsg(\"Invalid Entry\");\r\n            return;\r\n        }\r\n\r\n        try {\r\n            const response = await axios.post(REGISTER_URL,\r\n                JSON.stringify({ username:user, password:pwd }),\r\n                {\r\n                    headers: { 'Content-Type': 'application/json' },\r\n                    withCredentials: true\r\n                }\r\n            );\r\n            console.log(response.data);\r\n            console.log(response.accessToken)\r\n            console.log(JSON.stringify(response))\r\n            setSuccess(true);\r\n            setUser('');\r\n            setPwd('');\r\n            setMatchPwd('');\r\n        } catch (err) {\r\n            if(!err?.response){\r\n                setErrMsg(\"No Server Response\");\r\n            }else if (err.response === 409){\r\n                setErrMsg('Username Taken');\r\n            }else{\r\n                setErrMsg(\"Registration Failed\")\r\n            }\r\n            errRef.current.focus();\r\n        }\r\n        console.log(user, pwd);\r\n        setSuccess(true);\r\n    }\r\n\r\n    return (\r\n        <>\r\n            {\r\n                success ? (\r\n                    <section>\r\n                        <h1>Success!</h1>\r\n                        <p>\r\n                            <Link to='/login'>Sign Up</Link>\r\n                        </p>\r\n                    </section>\r\n                ) : (\r\n                    <section>\r\n                        <p ref={errRef} className={errMsg ? \"errmsg\" :\r\n                            \"offscreen\"} aria-live=\"assertive\">{errMsg}</p>\r\n                        <form onSubmit={handleSubmit}>\r\n                            <label htmlFor=\"username\">\r\n                                Username:\r\n                                <span className={validName ? \"valid\" : \"hide\"}>\r\n                                    <FontAwesomeIcon icon={faCheck} />\r\n                                </span>\r\n                                <span className={validName || !user ? \"hide\" :\r\n                                    \"invalid\"}>\r\n                                    <FontAwesomeIcon icon={faTimes} />\r\n                                </span>\r\n                            </label>\r\n                            <input\r\n                                type=\"text\"\r\n                                id=\"username\"\r\n                                ref={userRef}\r\n                                autoComplete=\"off\"\r\n                                onChange={(e) => setUser(e.target.value)}\r\n                                required\r\n                                aria-invalid={validName ? \"false\" : \"true\"}\r\n                                aria-describedby=\"uidnote\"\r\n                                onFocus={() => setUserFocus(true)}\r\n                                onBlur={() => setUserFocus(false)}\r\n                            />\r\n                            <p id=\"uidnote\" className={userFocus && user &&\r\n                                !validName ? \"instructions\" : \"offscreen\"}>\r\n                                <FontAwesomeIcon icon={faInfoCircle} />\r\n                                4 to 24 characters.<br />\r\n                                Must begin with a letter.<br />\r\n                                Letters, numbers, underscores, hyphens allowed.\r\n                            </p>\r\n\r\n                            <label htmlFor=\"password\">\r\n                                Password:\r\n                                <span className={validPwd ? \"valid\" : \"hide\"}>\r\n                                    <FontAwesomeIcon icon={faCheck} />\r\n                                </span>\r\n                                <span className={validPwd || !pwd ? \"hide\" :\r\n                                    \"invalid\"}>\r\n                                    <FontAwesomeIcon icon={faTimes} />\r\n                                </span>\r\n                            </label>\r\n                            <input\r\n                                type=\"password\"\r\n                                id=\"password\"\r\n                                onChange={(e) => setPwd(e.target.value)}\r\n                                required\r\n                                aria-invalid={validPwd ? \"false\" : \"true\"}\r\n                                aria-describedby=\"pwdnote\"\r\n                                onFocus={() => setPwdFocus(true)}\r\n                                onBlur={() => setPwdFocus(false)}\r\n                            />\r\n                            <p id=\"pwdnote\" className={pwdFocus && !validPwd ? \"instructions\" :\r\n                                \"offscreen\"}>\r\n                                <FontAwesomeIcon icon={faInfoCircle} />\r\n                                8 to 24 characters.<br />\r\n                                Must begin with a letter.<br />\r\n                                Must include uppercase and lowercase letters, a number and a special\r\n                                character.<br />\r\n                                Allowed special characters:\r\n                                <span aria-label=\"exclamation mark\">!</span>\r\n                                <span aria-label=\"at symbol\">@</span>\r\n                                <span aria-label=\"hashtag\">#</span>\r\n                                <span aria-label=\"dollar sign\">$</span>\r\n                                <span aria-label=\"percent\">%</span>\r\n                            </p>\r\n\r\n                            <label htmlFor=\"confirm_pwd\">\r\n                                Confirm Password:\r\n                                <span className={validMatch && matchPwd ? \"valid\" : \"hide\"}>\r\n                                    <FontAwesomeIcon icon={faCheck} />\r\n                                </span>\r\n                                <span className={validMatch || !matchPwd ? \"hide\" :\r\n                                    \"invalid\"}>\r\n                                    <FontAwesomeIcon icon={faTimes} />\r\n                                </span>\r\n                            </label>\r\n                            <input\r\n                                type=\"password\"\r\n                                id=\"confirm_pwd\"\r\n                                onChange={(e) => setMatchPwd(e.target.value)}\r\n                                required\r\n                                aria-invalid={validMatch ? \"false\" : \"true\"}\r\n                                aria-describedby=\"confirmnote\"\r\n                                onFocus={() => setMatchFocus(true)}\r\n                                onBlur={() => setMatchFocus(false)}\r\n                            />\r\n                            <p id=\"confirmnote\" className={matchFocus && !validMatch ? \"instructions\" :\r\n                                \"offscreen\"}>\r\n                                <FontAwesomeIcon icon={faInfoCircle} />\r\n                                Must match the first password input field.\r\n                            </p>\r\n\r\n                            <button disabled={!validName || !validPwd || !validMatch ? true : false}>Sign Up</button>\r\n\r\n                        </form>\r\n                        <p>\r\n                            Already registered?<br />\r\n                            <span className='line'>\r\n                                <Link to=\"/\">Sign In</Link>\r\n                            </span>\r\n                        </p>\r\n                    </section>\r\n                )}\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Register;\r\n\r\n"]},"metadata":{},"sourceType":"module"}