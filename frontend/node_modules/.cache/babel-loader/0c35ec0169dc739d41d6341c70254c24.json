{"ast":null,"code":"var _jsxFileName = \"D:\\\\FASTAPI_\\\\mufan_\\\\frontend\\\\src\\\\components\\\\Login.js\",\n    _s = $RefreshSig$();\n\nimport { useRef, useState, useEffect, useContext } from 'react';\nimport { Link, Navigate, useLocation } from \"react-router-dom\";\nimport { AuthContext } from '../context/AuthContext';\nimport axios from '../api/axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst LOGIN_URL = '/login';\n\nconst Login = () => {\n  _s();\n\n  const userRef = useRef();\n  const errRef = useRef();\n  const [user, setUser] = useState('');\n  const [pwd, setPwd] = useState('');\n  const [errMsg, setErrMsg] = useState('');\n  const [token, setToken] = useContext(AuthContext);\n  const location = useLocation();\n  useEffect(() => {\n    userRef.current.focus();\n  }, []);\n  useEffect(() => {\n    setErrMsg('');\n  }, [user, pwd]);\n\n  const handleSubmit = async e => {\n    e.preventDefault();\n    console.log(user, pwd);\n\n    try {\n      var _response$data, _response$data2;\n\n      const response = await axios.post(LOGIN_URL, JSON.stringify(`grant_type=&username=${user}&password=${pwd}&scope=&client_id=&client_secret=`), {\n        header: {\n          'Content-Type': 'application/x-www-form-urlencoded'\n        },\n        withCredentials: true\n      });\n      console.log(JSON.stringify(response === null || response === void 0 ? void 0 : response.data));\n      const accessToken = response === null || response === void 0 ? void 0 : (_response$data = response.data) === null || _response$data === void 0 ? void 0 : _response$data.access_token;\n      const roles = response === null || response === void 0 ? void 0 : (_response$data2 = response.data) === null || _response$data2 === void 0 ? void 0 : _response$data2.roles;\n      setToken({\n        roles,\n        accessToken\n      }); // console.log(response.data);\n      // console.log(response.data.user)\n\n      setUser('');\n      setPwd(\"\");\n      setSuccess(true);\n    } catch (err) {\n      var _err$response, _err$response2;\n\n      if (!(err !== null && err !== void 0 && err.response)) {\n        setErrMsg('No Server Response');\n      } else if (((_err$response = err.response) === null || _err$response === void 0 ? void 0 : _err$response.status) === 400) {\n        setErrMsg('Missing Username or Password');\n      } else if (((_err$response2 = err.response) === null || _err$response2 === void 0 ? void 0 : _err$response2.status) === 401) {\n        setErrMsg('Unauthorized');\n      } else {\n        setErrMsg('Login Failed');\n      }\n\n      errRef.current.focus();\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      ref: errRef,\n      className: errMsg ? \"errmsg\" : \"offscreen\",\n      \"aria-live\": \"assertive\",\n      children: errMsg\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 21\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Sign In\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 21\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"username\",\n        children: \"Username:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 25\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"username\",\n        ref: userRef,\n        autoComplete: \"off\",\n        onChange: e => setUser(e.target.value),\n        value: user,\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 25\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"password\",\n        children: \"Password:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 25\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        id: \"password\",\n        onChange: e => setPwd(e.target.value),\n        value: pwd,\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 25\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        children: \"Sign In\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 25\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 21\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Need an Account?\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 41\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"line\",\n        children: /*#__PURE__*/_jsxDEV(Link, {\n          to: \"/register\",\n          children: \"Sign Up\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 29\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 25\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 21\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 65,\n    columnNumber: 17\n  }, this);\n};\n\n_s(Login, \"6hC4bSrWPGR03xbTgI5op/Xos78=\", false, function () {\n  return [useLocation];\n});\n\n_c = Login;\nexport default Login;\n\nvar _c;\n\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"sources":["D:/FASTAPI_/mufan_/frontend/src/components/Login.js"],"names":["useRef","useState","useEffect","useContext","Link","Navigate","useLocation","AuthContext","axios","LOGIN_URL","Login","userRef","errRef","user","setUser","pwd","setPwd","errMsg","setErrMsg","token","setToken","location","current","focus","handleSubmit","e","preventDefault","console","log","response","post","JSON","stringify","header","withCredentials","data","accessToken","access_token","roles","setSuccess","err","status","target","value"],"mappings":"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","sourcesContent":["import { useRef, useState, useEffect, useContext } from 'react'\r\nimport { Link ,Navigate,useLocation,} from \"react-router-dom\";\r\nimport { AuthContext } from '../context/AuthContext';\r\nimport axios from '../api/axios';\r\nconst LOGIN_URL = '/login';\r\n\r\nconst Login = () => {\r\n    const userRef = useRef();\r\n    const errRef = useRef();\r\n\r\n    const [user, setUser] = useState('');\r\n    const [pwd, setPwd] = useState('');\r\n    const [errMsg, setErrMsg] = useState('');\r\n    const[token,setToken] = useContext(AuthContext);\r\n\r\n    const location = useLocation();\r\n    useEffect(() => {\r\n        userRef.current.focus();\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        setErrMsg('');\r\n    }, [user, pwd])\r\n\r\n    const handleSubmit = async (e) => {\r\n        e.preventDefault();\r\n\r\n        console.log(user, pwd);\r\n\r\n        try {\r\n            const response = await axios.post(LOGIN_URL,\r\n                JSON.stringify(`grant_type=&username=${user}&password=${pwd}&scope=&client_id=&client_secret=`),\r\n                {\r\n                    header: { 'Content-Type': 'application/x-www-form-urlencoded' },\r\n                    withCredentials: true\r\n                }\r\n            );\r\n            console.log(JSON.stringify(response?.data))\r\n\r\n            const accessToken = response?.data?.access_token;\r\n            const roles = response?.data?.roles;\r\n            setToken({roles,accessToken});\r\n            // console.log(response.data);\r\n            // console.log(response.data.user)\r\n            \r\n            setUser('');\r\n            setPwd(\"\");\r\n            setSuccess(true);\r\n        } catch (err) {\r\n            if(!err?.response){\r\n                setErrMsg('No Server Response');\r\n            }else if (err.response?.status === 400){\r\n                setErrMsg('Missing Username or Password');\r\n            }else if (err.response?.status === 401){\r\n                setErrMsg('Unauthorized');\r\n            }else {\r\n                setErrMsg('Login Failed');\r\n            }\r\n            errRef.current.focus();\r\n        }\r\n\r\n    }\r\n\r\n    return (\r\n                <section>\r\n                    <p ref={errRef} className={errMsg ? \"errmsg\" :\r\n                        \"offscreen\"} aria-live=\"assertive\">{errMsg}</p>\r\n                    <h1>Sign In</h1>\r\n                    <form onSubmit={handleSubmit}>\r\n                        <label htmlFor='username'>Username:</label>\r\n                        <input\r\n                            type=\"text\"\r\n                            id=\"username\"\r\n                            ref={userRef}\r\n                            autoComplete=\"off\"\r\n                            onChange={(e) => setUser(e.target.value)}\r\n                            value={user}\r\n                            required\r\n                        />\r\n                        <label htmlFor='password'>Password:</label>\r\n                        <input\r\n                            type=\"password\"\r\n                            id=\"password\"\r\n                            onChange={(e) => setPwd(e.target.value)}\r\n                            value={pwd}\r\n                            required\r\n                        />\r\n                        <button >Sign In</button>\r\n                    </form>\r\n                    <p>\r\n                        Need an Account?<br />\r\n                        <span className='line'>\r\n                            {/*put router link here*/}\r\n                            <Link to='/register'>Sign Up</Link>\r\n                        </span>\r\n                    </p>\r\n                </section>\r\n            )}\r\n\r\nexport default Login;"]},"metadata":{},"sourceType":"module"}